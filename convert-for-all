#!/usr/bin/env ruby
require 'json'
require 'open3'
require 'pp'
require 'shellwords'

# Converts media files to use container/codec pairings that are compatible with:
# - Google Chrome / Chromecast
# - Microsoft Xbox One
module ConvertForAll
  module_function

  def get_streams(filename)
    filename = Shellwords.escape(filename)
    cmd = "ffprobe -show_streams -print_format json #{filename}"
    _stdin, stdout, _stderr = Open3.popen3(cmd)
    JSON.parse(stdout.read, symbolize_names: true)[:streams]
  end

  def valid_audio_codecs
    %w(aac)
  end

  def audio_needs_conversion?(streams)
    valid_streams = streams.select do |s|
      s[:codec_type] == 'audio' &&
        valid_audio_codecs.include?(s[:codec_name])
    end
    valid_streams.empty?
  end

  def valid_video_codecs
    %w(h264 hevc)
  end

  def video_needs_conversion?(streams)
    valid_streams = streams.select do |s|
      s[:codec_type] == 'video' &&
        valid_video_codecs.include?(s[:codec_name])
    end
    valid_streams.empty?
  end

  def container_needs_conversion?(filename)
    File.extname(filename) != '.mp4'
  end

  def convert_if_needed(filename)
    streams = get_streams(filename)

    params = {
      audio_encode: audio_needs_conversion?(streams),
      video_encode: video_needs_conversion?(streams),
      container_convert: container_needs_conversion?(filename)
    }

    convert(filename, params) if params.any? { |_k, v| v }
  end

  def convert(filename, opts)
    puts "Converting '#{filename}' with the following options:"
    pp opts

    dir = File.dirname(filename)
    basename = File.basename(filename, '.*') + '-compat.mp4'
    newfile = File.join(dir, basename)

    in_fname = Shellwords.escape(filename)
    out_fname = Shellwords.escape(newfile)

    video = 'copy'
    video = 'h264' if opts[:video_encode]

    audio = 'copy'
    audio = '-c:a aac' if opts[:audio_encode]

    cmd = "ffmpeg -i #{in_fname} -c:v #{video} -c:a #{audio} #{out_fname}"
    puts 'Running this ffmpeg incantation:'
    puts cmd
    system(cmd)
  end

  def run(files)
    files.each { |f| convert_if_needed(f) }
  end
end

if ARGF.argv.empty?
  puts "Usage: #{$PROGRAM_NAME} <input_file(s)>"
  exit
end

ConvertForAll.run(ARGF.argv)
